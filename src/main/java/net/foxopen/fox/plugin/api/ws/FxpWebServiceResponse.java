package net.foxopen.fox.plugin.api.ws;

import net.foxopen.fox.dom.DOM;
import net.foxopen.fox.entrypoint.ws.BinaryWebServiceResponse;
import net.foxopen.fox.entrypoint.ws.GenericWebServiceResponse;
import net.foxopen.fox.entrypoint.ws.WebServiceResponse;
import net.foxopen.fox.entrypoint.ws.XMLWebServiceResponse;
import net.foxopen.fox.plugin.api.command.util.FxpOutputStreamGenerator;
import net.foxopen.fox.plugin.api.dom.FxpDOM;
import net.foxopen.fox.plugin.util.OutputStreamGeneratorAdaptor;

import java.util.Map;

/**
 * A response generated by a plugin WebService. Use static factory methods for instantiation.
 */
public class FxpWebServiceResponse {

  private final WebServiceResponse mWrappedResponse;

  public static enum Type {
    JSON, XML;
  }

  private FxpWebServiceResponse(WebServiceResponse pWrappedResponse) {
    mWrappedResponse = pWrappedResponse;
  }

  /**
   * Creates an overridden XML response. The XML will be returned directly to the client with no modifications.
   * @param pXML XML to return.
   * @return
   */
  public static FxpWebServiceResponse xmlResponse(FxpDOM pXML) {
    return new FxpWebServiceResponse(new XMLWebServiceResponse((DOM) pXML));
  }

  /**
   * Creates a generic response which can be returned as either XML or JSON depending on the client's preference. The
   * property map should be a map with sensible string keys, with values which are either strings, primitives or collections.
   * @param pResultMap Name/value pairs to return.
   * @return
   */
  public static FxpWebServiceResponse genericResponse(Map<String, ? extends Object> pResultMap) {
    return new FxpWebServiceResponse(new GenericWebServiceResponse(pResultMap));
  }

  /**
   * Creates a binary response which will stream bytes directly to the client.
   * @param pContentType Content type of the file being served.
   * @param pCacheTimeMS Time the file should survive in a browser cache, in milliseconds.
   * @param pOutputStreamGenerator Generator which will write to the OutputStream. This will be invoked just before sending
   *                               the response.
   * @return
   */
  public static FxpWebServiceResponse binaryResponse(String pContentType, long pCacheTimeMS, final FxpOutputStreamGenerator pOutputStreamGenerator) {
    return new FxpWebServiceResponse(new BinaryWebServiceResponse(pContentType, pCacheTimeMS, new OutputStreamGeneratorAdaptor(pOutputStreamGenerator)));
  }

  //Object return type is a minor hack - it prevents the WebServiceResponse interface being exposed within the plugin API
  public Object getWrappedResponse() {
    return mWrappedResponse;
  }
}
