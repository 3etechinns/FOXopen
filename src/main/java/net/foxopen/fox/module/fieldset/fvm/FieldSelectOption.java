package net.foxopen.fox.module.fieldset.fvm;

/**
 * Output serialisation related information about an option appearing in a selection based widget (i.e. a select/checkbox/radio).
 * FieldSelectOptions are generated by a {@link FieldValueMapping}, which is able to map the external value for the
 * option ({@link #getExternalFieldValue}) to a corresponding DOM value when the page is posted using an {@link FVMOption}.
 * However, FieldSelectOptions are not required to have a corresponding FVMOption, as they may represent special values
 * such as a null or unrecognised option.
 */
public interface FieldSelectOption {

  /**
   * Gets the user-facing display key for this option. This should be what the user sees on the screen when a widget is
   * displaying this option.
   * @return User display key.
   */
  public String getDisplayKey();

  /**
   * External "value" (i.e. the value which will be submitted from the input widget in an HTML form) for this
   * FieldSelectOption. For "select" widgets this will be the value of the corresponding "option" element.
   * @return Value this option should have in the generated form.
   */
  public String getExternalFieldValue();

  /**
   * Tests if this option is currently selected by the user. Widgets should use this value to control the initial state
   * of the widget when it is generated.
   * @return True if selected.
   */
  public boolean isSelected();

  /**
   * Tests if this option is "historical". This means it was formally a permitted option but has since been removed from
   * the FieldValueMapping (typically an editable mapset). Historical options should only be displayed in a consuming widget
   * if they are currently selected. If a user de-selects a historical value, it should no longer appear in the list of
   * available options.
   * @return True if the option is historical.
   */
  public boolean isHistorical();

  /**
   * Tests if this option is disabled. Disabled options should still appear in a widget, but they should not be selectable
   * and should be distinguished visually from non-disabled options.
   * @return True if the option is disabled.
   */
  public boolean isDisabled();

  /**
   * Tests if this option represents a "key-null" entry. This is a dummy option showing the user that nothing has been selected.
   * @return True if the option is a key-null value.
   */
  public boolean isNullEntry();

  /**
   * Tests if this option represents a "key-missing" entry. This is a dummy option prompting the user to perform a selection.
   * @return True if the option is a key-missing value.
   */
  public boolean isMissingEntry();

  /**
   * Gets an "additional property" for this FieldSelectOption which may have been defined by a developer. Custom widgets
   * may rely on such additional properties for additional display information about the option. It is is the widget's
   * responsibilty to validate and sanitise the result of this method.
   * @param pPropertyName Property name to retrieve. For mapsets, this will be the element name within the 'rec' element.
   * @return The property from the FVM as a String, or null if the property is not defined for this FieldSelectOption.
   */
  public String getAdditionalProperty(String pPropertyName);

}
